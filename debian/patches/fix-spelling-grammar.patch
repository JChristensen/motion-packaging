commit b911018fe7419770d751f79f76b9fb4634931a79
Author: Ximin Luo <infinity0@debian.org>
Date:   Wed Sep 28 16:35:36 2016 +0200

    Fix spelling/grammar mistakes

--- a/conf.c
+++ b/conf.c
@@ -250,7 +250,7 @@
     },
     {
     "v4l2_palette",
-    "# v4l2_palette allows to choose preferable palette to be use by motion\n"
+    "# v4l2_palette allows one to choose preferable palette to be use by motion\n"
     "# to capture from those supported by your videodevice. (default: 17)\n"
     "# E.g. if your videodevice supports both V4L2_PIX_FMT_SBGGR8 and\n"
     "# V4L2_PIX_FMT_MJPEG then motion will by default use V4L2_PIX_FMT_MJPEG.\n"
--- a/configure.ac
+++ b/configure.ac
@@ -412,7 +412,7 @@
     saved_LIBS=$LIBS
 
     # first we check to see if the sqlite3 amalgamation (sqlite3.c), is in with our source
-    # this is the prefered way to use sqlite
+    # this is the preferred way to use sqlite
     AC_CHECK_FILE([sqlite3.c],
         [
         SQLITE3_SUPPORT="yes"
--- a/event.c
+++ b/event.c
@@ -565,7 +565,7 @@
         /* Check that is open */
         if ((cnt->extpipe_open) && (fileno(cnt->extpipe) > 0)) {
             if (!fwrite(img, cnt->imgs.size, 1, cnt->extpipe))
-                MOTION_LOG(ERR, TYPE_EVENTS, SHOW_ERRNO, "%s: Error writting in pipe , state error %d",
+                MOTION_LOG(ERR, TYPE_EVENTS, SHOW_ERRNO, "%s: Error writing in pipe , state error %d",
                            ferror(cnt->extpipe));
         } else {
             MOTION_LOG(ERR, TYPE_EVENTS, NO_ERRNO, "%s: pipe %s not created or closed already ",
--- a/motion-dist.conf.in
+++ b/motion-dist.conf.in
@@ -38,7 +38,7 @@
 # for FreeBSD default is /dev/bktr0
 videodevice /dev/video0
 
-# v4l2_palette allows to choose preferable palette to be use by motion
+# v4l2_palette allows one to choose preferable palette to be use by motion
 # to capture from those supported by your videodevice. (default: 17)
 # E.g. if your videodevice supports both V4L2_PIX_FMT_SBGGR8 and
 # V4L2_PIX_FMT_MJPEG then motion will by default use V4L2_PIX_FMT_MJPEG.
--- a/motion.1
+++ b/motion.1
@@ -137,7 +137,7 @@
 .fi
 .RS
 String to specify the videodevice to be used for capturing.  
-For Linux, the format is usually /dev/videoX where X varies depending upon the video devices connnected to the computer.
+For Linux, the format is usually /dev/videoX where X varies depending upon the video devices connected to the computer.
 For FreeBSD the default device would be /dev/bktr0.
 .RE
 .RE
@@ -171,8 +171,8 @@
 Description: 
 .fi
 .RS
-The v4l2_palette option allows users to choose the prefered palette to be use by motion to capture from the video device.  
-If the prefered palette is not available from the video device, Motion will attempt to use palettes that are supported.
+The v4l2_palette option allows users to choose the preferred palette to be use by motion to capture from the video device.  
+If the preferred palette is not available from the video device, Motion will attempt to use palettes that are supported.
 .RE
 .RE
 
--- a/picture.c
+++ b/picture.c
@@ -903,7 +903,7 @@
         return put_jpeg_grey_memory(dest_image, image_size, image,
                                     cnt->imgs.width, cnt->imgs.height, quality);
     default:
-        MOTION_LOG(WRN, TYPE_ALL, NO_ERRNO, "%s: Unknow image type %d",
+        MOTION_LOG(WRN, TYPE_ALL, NO_ERRNO, "%s: Unknown image type %d",
                    cnt->imgs.type);
     }
 
@@ -923,7 +923,7 @@
             put_jpeg_grey_file(picture, image, cnt->imgs.width, cnt->imgs.height, quality);
             break;
         default:
-            MOTION_LOG(WRN, TYPE_ALL, NO_ERRNO, "%s: Unknow image type %d",
+            MOTION_LOG(WRN, TYPE_ALL, NO_ERRNO, "%s: Unknown image type %d",
                        cnt->imgs.type);
         }
     }
